{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Application.js","src/FilterPatcherV3.js","src/RendererPatcher.js","index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pixiLegacy","min","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Application","width","height","options","noWebGL","_classCallCheck","renderer","PIXI","autoDetectRenderer","stage","Container","ticker","Ticker","add","render","start","stop","destroy","removeView","remove","view","screen","FilterPatcherV3","FilterManager_popFilter","filterData","filterStack","pop","previousFilterData","input","renderTarget","output","gl","currentFrame","frame","quad","map","textureSize","bindBuffer","ARRAY_BUFFER","vertexBuffer","ELEMENT_ARRAY_BUFFER","indexBuffer","filters","filter","vertexAttribPointer","shaderManager","defaultShader","attributes","aVertexPosition","FLOAT","aTextureCoord","aColor","blendModeManager","setBlendMode","CONST","BLEND_MODES","NORMAL","uniforms","dimensions","value","vertices","_filterBlendMode","blendMode","applyFilter","returnRenderTarget","flipTexture","flopTexture","getRenderTarget","temp","FilterManager_applyFilter","shader","inputTarget","outputTarget","clear","setRenderTarget","setShader","projectionMatrix","currentRenderTarget","toArray","syncUniforms","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texture","drawElements","TRIANGLES","UNSIGNED_SHORT","drawCount","AbstractFilter","WebGLRenderer","VoidFilter","prototype","_mapGlModes","filterManager","popFilter","blendModes","ONE","ONE_MINUS_SRC_ALPHA","ADD","DST_ALPHA","MULTIPLY","DST_COLOR","SCREEN","ONE_MINUS_SRC_COLOR","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","drawModes","DRAW_MODES","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","RendererPatcher","RendererProto","hasOwnProperty","Object","defineProperties","get","Rectangle","set","_Application","_RendererPatcher","_FilterPatcherV","_RendererPatcher2","default","CanvasRenderer","assign","_Application2","_FilterPatcherV2","particles","ParticleContainer"],"mappings":"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","file":"pixi-legacy.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export default class Application {\r\n    constructor(width, height, options, noWebGL) {\r\n        this.renderer = PIXI.autoDetectRenderer(width, height, options, noWebGL);\r\n\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.ticker = new PIXI.Ticker();\r\n\r\n        this.ticker.add(this.render, this);\r\n\r\n        // Start the rendering\r\n        this.start();\r\n    }\r\n\r\n    render() {\r\n        this.renderer.render(this.stage);\r\n    }\r\n\r\n    stop() {\r\n        this.ticker.stop();\r\n    }\r\n\r\n    start() {\r\n        this.ticker.start();\r\n    }\r\n\r\n    get view() {\r\n        return this.renderer.view;\r\n    }\r\n\r\n    get screen() {\r\n        return this.renderer.screen;\r\n    }\r\n\r\n    destroy(removeView) {\r\n        this.stop();\r\n        this.ticker.remove(this.render, this);\r\n        this.ticker = null;\r\n\r\n        this.stage.destroy();\r\n        this.stage = null;\r\n\r\n        this.renderer.destroy(removeView);\r\n        this.renderer = null;\r\n    }\r\n}\r\n","export default function FilterPatcherV3(PIXI) {\r\n\r\n    var CONST = PIXI;\r\n    var AbstractFilter = PIXI.AbstractFilter;\r\n    var WebGLRenderer = PIXI.WebGLRenderer;\r\n\r\n    PIXI.filters.VoidFilter = AbstractFilter;\r\n\r\n    AbstractFilter.prototype.blendMode = 0;\r\n\r\n    function FilterManager_popFilter()\r\n    {\r\n        var filterData = this.filterStack.pop();\r\n        var previousFilterData = this.filterStack[this.filterStack.length-1];\r\n\r\n        var input = filterData.renderTarget;\r\n\r\n        // if the renderTarget is null then we don't apply the filter as its offscreen\r\n        if(!filterData.renderTarget)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var output = previousFilterData.renderTarget;\r\n\r\n        // use program\r\n        var gl = this.renderer.gl;\r\n\r\n\r\n        this.currentFrame = input.frame;\r\n\r\n        this.quad.map(this.textureSize, input.frame);\r\n\r\n\r\n        // TODO.. this probably only needs to be done once!\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.quad.vertexBuffer);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.quad.indexBuffer);\r\n\r\n        var filters = filterData.filter;\r\n\r\n        // assuming all filters follow the correct format??\r\n        gl.vertexAttribPointer(this.renderer.shaderManager.defaultShader.attributes.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\r\n        gl.vertexAttribPointer(this.renderer.shaderManager.defaultShader.attributes.aTextureCoord, 2, gl.FLOAT, false, 0, 2 * 4 * 4);\r\n        gl.vertexAttribPointer(this.renderer.shaderManager.defaultShader.attributes.aColor, 4, gl.FLOAT, false, 0, 4 * 4 * 4);\r\n\r\n        // restore the normal blendmode!\r\n        this.renderer.blendModeManager.setBlendMode(CONST.BLEND_MODES.NORMAL);\r\n\r\n        if (filters.length === 1)\r\n        {\r\n            // TODO (cengler) - There has to be a better way then setting this each time?\r\n            if (filters[0].uniforms.dimensions)\r\n            {\r\n                filters[0].uniforms.dimensions.value[0] = this.renderer.width;\r\n                filters[0].uniforms.dimensions.value[1] = this.renderer.height;\r\n                filters[0].uniforms.dimensions.value[2] = this.quad.vertices[0];\r\n                filters[0].uniforms.dimensions.value[3] = this.quad.vertices[5];\r\n            }\r\n\r\n            this._filterBlendMode = filters[0].blendMode;\r\n            filters[0].applyFilter( this.renderer, input, output );\r\n            this.returnRenderTarget( input );\r\n\r\n        }\r\n        else\r\n        {\r\n            var flipTexture = input;\r\n            var flopTexture = this.getRenderTarget(true);\r\n\r\n            for (var i = 0; i < filters.length-1; i++)\r\n            {\r\n                var filter = filters[i];\r\n\r\n                // TODO (cengler) - There has to be a better way then setting this each time?\r\n                if (filter.uniforms.dimensions)\r\n                {\r\n                    filter.uniforms.dimensions.value[0] = this.renderer.width;\r\n                    filter.uniforms.dimensions.value[1] = this.renderer.height;\r\n                    filter.uniforms.dimensions.value[2] = this.quad.vertices[0];\r\n                    filter.uniforms.dimensions.value[3] = this.quad.vertices[5];\r\n                }\r\n\r\n                this._filterBlendMode = filter.blendMode;\r\n                filter.applyFilter( this.renderer, flipTexture, flopTexture );\r\n\r\n                var temp = flipTexture;\r\n                flipTexture = flopTexture;\r\n                flopTexture = temp;\r\n            }\r\n\r\n            this._filterBlendMode = filters[filters.length-1].blendMode;\r\n            filters[filters.length-1].applyFilter( this.renderer, flipTexture, output );\r\n\r\n            this.returnRenderTarget( flipTexture );\r\n            this.returnRenderTarget( flopTexture );\r\n        }\r\n        this._filterBlendMode = 0;\r\n\r\n        return filterData.filter;\r\n    }\r\n\r\n    function FilterManager_applyFilter(shader, inputTarget, outputTarget, clear) {\r\n        var gl = this.renderer.gl;\r\n\r\n        this.renderer.setRenderTarget(outputTarget);\r\n\r\n        if (clear)\r\n        {\r\n            outputTarget.clear();\r\n        }\r\n\r\n        this.renderer.shaderManager.setShader(shader);\r\n\r\n        shader.uniforms.projectionMatrix.value = this.renderer.currentRenderTarget.projectionMatrix.toArray(true);\r\n\r\n        shader.syncUniforms();\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, inputTarget.texture);\r\n\r\n        this.renderer.blendModeManager.setBlendMode(this._filterBlendMode);\r\n\r\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n        this.renderer.blendModeManager.setBlendMode(CONST.BLEND_MODES.NORMAL);\r\n        this.renderer.drawCount++;\r\n    }\r\n\r\n    WebGLRenderer.prototype._mapGlModes = function ()\r\n    {\r\n        this.filterManager.applyFilter = FilterManager_applyFilter;\r\n        this.filterManager.popFilter = FilterManager_popFilter;\r\n\r\n        var gl = this.gl;\r\n\r\n        if (!this.blendModes)\r\n        {\r\n            this.blendModes = {};\r\n\r\n            this.blendModes[CONST.BLEND_MODES.NORMAL]        = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.ADD]           = [gl.ONE,       gl.DST_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.MULTIPLY]      = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.SCREEN]        = [gl.ONE,       gl.ONE_MINUS_SRC_COLOR];\r\n            this.blendModes[CONST.BLEND_MODES.OVERLAY]       = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.DARKEN]        = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.LIGHTEN]       = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.COLOR_DODGE]   = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.COLOR_BURN]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.HARD_LIGHT]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.SOFT_LIGHT]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.DIFFERENCE]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.EXCLUSION]     = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.HUE]           = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.SATURATION]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.COLOR]         = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[CONST.BLEND_MODES.LUMINOSITY]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\r\n        }\r\n\r\n        if (!this.drawModes)\r\n        {\r\n            this.drawModes = {};\r\n\r\n            this.drawModes[CONST.DRAW_MODES.POINTS]         = gl.POINTS;\r\n            this.drawModes[CONST.DRAW_MODES.LINES]          = gl.LINES;\r\n            this.drawModes[CONST.DRAW_MODES.LINE_LOOP]      = gl.LINE_LOOP;\r\n            this.drawModes[CONST.DRAW_MODES.LINE_STRIP]     = gl.LINE_STRIP;\r\n            this.drawModes[CONST.DRAW_MODES.TRIANGLES]      = gl.TRIANGLES;\r\n            this.drawModes[CONST.DRAW_MODES.TRIANGLE_STRIP] = gl.TRIANGLE_STRIP;\r\n            this.drawModes[CONST.DRAW_MODES.TRIANGLE_FAN]   = gl.TRIANGLE_FAN;\r\n        }\r\n    };\r\n}","export default function RendererPatcher(RendererProto) {\r\n    if (RendererProto.hasOwnProperty(\"width\")) {\r\n        return;\r\n    }\r\n    RendererProto.screen = null;\r\n    Object.defineProperties(RendererProto, {\r\n        width: {\r\n            get: function () {\r\n                if (!this.screen) {\r\n                    this.screen = new PIXI.Rectangle(0, 0, 1, 1);\r\n                }\r\n                return this.screen.width;\r\n            },\r\n            set: function (value) {\r\n                if (!this.screen) {\r\n                    this.screen = new PIXI.Rectangle(0, 0, 1, 1);\r\n                }\r\n                this.screen.width = value;\r\n            }\r\n        },\r\n        height: {\r\n            get: function () {\r\n                if (!this.screen) {\r\n                    this.screen = new PIXI.Rectangle(0, 0, 1, 1);\r\n                }\r\n                return this.screen.height;\r\n            },\r\n            set: function (value) {\r\n                if (!this.screen) {\r\n                    this.screen = new PIXI.Rectangle(0, 0, 1, 1);\r\n                }\r\n                this.screen.height = value;\r\n            }\r\n        }\r\n    });\r\n}","import Application from \"./Application\";\r\nimport RendererPatcher from \"./RendererPatcher\";\r\nimport FilterPatcherV3 from \"./FilterPatcherV3\";\r\n\r\nRendererPatcher(PIXI.CanvasRenderer.prototype);\r\nRendererPatcher(PIXI.WebGLRenderer.prototype);\r\n\r\nif (!PIXI.Ticker && PIXI.ticker) {\r\n    Object.assign(PIXI, PIXI.ticker);\r\n}\r\n\r\nif (!PIXI.Application) {\r\n    PIXI.Application = Application;\r\n}\r\n\r\nif (!PIXI.filters.VoidFilter) {\r\n    FilterPatcherV3(PIXI);\r\n}\r\n\r\nif (!PIXI.particles) {\r\n    PIXI.particles = {\r\n        ParticleContainer: PIXI.ParticleContainer\r\n    };\r\n} else {\r\n    PIXI.ParticleContainer = PIXI.particles.ParticleContainer;\r\n}\r\n\r\nmodule.exports = PIXI;\r\n"],"sourceRoot":"."}